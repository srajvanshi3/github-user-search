[{"C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\index.js":"1","C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\App.js":"2","C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\Component\\SearchResult.js":"3","C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\Component\\Seearchbox.js":"4","C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\Component\\UserListView.js":"5","C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\Utils\\ApiUtils.js":"6"},{"size":410,"mtime":1609680287053,"results":"7","hashOfConfig":"8"},{"size":186,"mtime":1609817827004,"results":"9","hashOfConfig":"8"},{"size":1545,"mtime":1609757708375,"results":"10","hashOfConfig":"8"},{"size":2037,"mtime":1609825596867,"results":"11","hashOfConfig":"8"},{"size":666,"mtime":1609823432448,"results":"12","hashOfConfig":"8"},{"size":727,"mtime":1609825276095,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14zqepp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\index.js",[],["29","30"],"C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\App.js",[],"C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\Component\\SearchResult.js",["31","32","33","34","35","36","37","38","39"],"import React from \"react\";\r\nimport Github from \"../Component/github.jpg\"\r\n\r\nconst SearchResult = ({ info , repositories }) => {\r\n  const repoArr = repositories.map((nm)=>nm.name)\r\n  return (\r\n   <div>\r\n\r\n<div>\r\n  <img className=\"card-img\"  src={info.avatar_url} alt=\"Card image cap\" />\r\n  <div className=\"card-body\">\r\n    <h3 className=\"card-title\">{info.name}</h3>\r\n    <p className=\"card-text\">{info.bio}</p>\r\n  </div>\r\n</div>\r\n\r\n   <h3>Some More Information:-</h3>\r\n<div className=\"list-group\">\r\n\r\n  \r\n  <a href=\"#\" className=\"list-group-item list-group-item-action list-group-item-primary\">Followers:{info.followers}</a>\r\n  <a href=\"#\" className=\"list-group-item list-group-item-action list-group-item-secondary\">Following:{info.following}</a>\r\n  <a href=\"#\" className=\"list-group-item list-group-item-action list-group-item-success\">location : {info.location}</a>\r\n  <a href=\"#\" className=\"list-group-item list-group-item-action list-group-item-success\">HtmlURL : {info.html_url}</a>\r\n  <a href=\"#\" className=\"list-group-item list-group-item-action list-group-item-success\">GitHub ID : {info.id}</a>\r\n  <a href=\"#\" className=\"list-group-item list-group-item-action list-group-item-secondary\">WorkingAt : {info.company}</a>\r\n\r\n  \r\n</div>\r\n       \r\n<div>\r\n <h1>REPOSITORIES:</h1> { repoArr.map((nm, index) => (\r\n        <a><p><h3><img className='git-icon' src={Github}></img> {nm} </h3></p></a>\r\n    ))}\r\n  \r\n</div>\r\n</div>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n\r\n//https://api.github.com/search/users?q=shivam for multiple users\r\n","C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\Component\\Seearchbox.js",[],"C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\Component\\UserListView.js",["40","41"],"import React from 'react'\r\n\r\nfunction UserListView(props) {\r\n\r\n    console.log(\".......props\" , props.search[0])\r\n    const usersList = props.search\r\n    \r\n    usersList.map((log)=>{\r\n        const loginID= log.login\r\n        console.log(\"aray..\", loginID)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h3>search result: </h3>\r\n\r\n       {usersList.map((log)=>{\r\n           return (\r\n               <ul>\r\n                \r\n                <li><img src={log.avatar_url} className=\"user-img\"></img> <h3>{log.login}</h3></li>\r\n               \r\n               </ul>\r\n           \r\n           ) \r\n       })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListView\r\n","C:\\Users\\shivam\\Desktop\\Dobby-ADS\\client\\src\\Utils\\ApiUtils.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":10,"column":3,"nodeType":"48","endLine":10,"endColumn":75},{"ruleId":"49","severity":1,"message":"50","line":21,"column":3,"nodeType":"48","endLine":21,"endColumn":90},{"ruleId":"49","severity":1,"message":"50","line":22,"column":3,"nodeType":"48","endLine":22,"endColumn":92},{"ruleId":"49","severity":1,"message":"50","line":23,"column":3,"nodeType":"48","endLine":23,"endColumn":90},{"ruleId":"49","severity":1,"message":"50","line":24,"column":3,"nodeType":"48","endLine":24,"endColumn":90},{"ruleId":"49","severity":1,"message":"50","line":25,"column":3,"nodeType":"48","endLine":25,"endColumn":90},{"ruleId":"49","severity":1,"message":"50","line":26,"column":3,"nodeType":"48","endLine":26,"endColumn":92},{"ruleId":"49","severity":1,"message":"51","line":33,"column":9,"nodeType":"48","endLine":33,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":33,"column":19,"nodeType":"48","endLine":33,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":8,"column":24,"nodeType":"56","messageId":"57","endLine":8,"endColumn":26},{"ruleId":"52","severity":1,"message":"53","line":21,"column":21,"nodeType":"48","endLine":21,"endColumn":68},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]